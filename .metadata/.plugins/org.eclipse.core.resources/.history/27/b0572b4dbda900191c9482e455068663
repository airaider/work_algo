package array;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class robot {
	public static int stoi(String s) {
		return Integer.parseInt(s);
		}
	static int N;
	static int[] dirR= {-1,1,0,0};		
	static int[] dirC= {0,0,-1,1};
	static char[][] map;
	static int count=0;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int T=stoi(st.nextToken());
		for(int t=1;t<=T;t++) {
			count=0;
			st = new StringTokenizer(br.readLine());
			N=stoi(st.nextToken());
			map = new char [N][N];
			for (int i = 0; i < N; i++) {
				st = new StringTokenizer(br.readLine());
				System.out.println(st);
				for (int j = 0; j < N; j++) {
					
				}
			}
			show();
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					if(map[i][j]=='A') movea(i,j);
					if(map[i][j]=='B') moveb(i,j);
					if(map[i][j]=='C') movec(i,j);
				}
			}
			System.out.println("#"+t+" "+count);

		}

	}
	private static void show() {
			for(int i=0;i<N;i++) {
				for(int j=0;j<N;j++) {
					System.out.print(map[i][j]);
				}
				System.out.println();
			}
			
		
		
	}
	private static void moveb(int x, int y) {
		System.out.println("b");
		for(int i=0;i<2;i++) {
			int nr = x+dirR[i];
			int nc = y+dirC[i];
			if(0<=nr && nr<N && 0<=nc && nc<N ) {
				if(map[nr][nc] == 'S') count++;
			}
		}
		
	}
	private static void movea(int x, int y) {
		System.out.println("a");
		int nr = x+1;
		int nc = y;
		if(0<=nr && nr<N && 0<=nc && nc<N ) {
			if(map[nr][nc] == 'S') count++;
		}
		
		
	}
	private static void movec(int x, int y) {
		System.out.println("c");
		for(int i=0;i<4;i++) {
			int nr = x+dirR[i];
			int nc = y+dirC[i];
			if(0<=nr && nr<N && 0<=nc && nc<N ) {
				if(map[nr][nc] == 'S') count++;
			}
		}
		
	}
	
}




/*
1
6
S A S S W S
S W A S C S
S W S W S S
S W S S W S
S B S S W S
S S S S S S 
 
 
 
3
6
S A S S W S
S W A S C S
S W S W S S
S W S S W S
S B S S W S
S S S S S S
3
S S A
B W W
S W C
10
C S S S S S S S S C
S W S S S S S S W S
S S W S S S S W S S
A S S W S S W S S A
S S S S S B S S S S
S S S S B S S S S S
A S S W S S W S S A
S S W S S S S W S S
S W S S S S S S W S
C S S S S S S S S C
*/ 

