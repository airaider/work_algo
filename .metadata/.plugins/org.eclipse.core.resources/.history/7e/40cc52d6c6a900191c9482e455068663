package array;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class maze {
	public static int stoi(String s) {
		return Integer.parseInt(s);
		}
	static int N;
	static int x,y,j,M;
	static int dir,dis;
	static int[] dirR= {-1,0,1,0};		
	static int[] dirC= {0,1,0,-1};
	static int[][] map;
	static int a,b;
	static int count=0;
	static StringTokenizer st;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		st = new StringTokenizer(br.readLine());
		int T=stoi(st.nextToken());
		for(int t=1;t<=T;t++) {
			count=0;
			st = new StringTokenizer(br.readLine());
			N=stoi(st.nextToken());
			x=stoi(st.nextToken());
			y=stoi(st.nextToken());
			j=stoi(st.nextToken());
			map = new int [N][N];
			st = new StringTokenizer(br.readLine());
			for (int i = 0; i < j; i++) {
				a=stoi(st.nextToken());
				b=stoi(st.nextToken());
				map[a-1][b-1]=1;
			}
			st = new StringTokenizer(br.readLine());
			M=stoi(st.nextToken());
			st = new StringTokenizer(br.readLine());
			for (int i = 0; i < M; i++) {
				dir=stoi(st.nextToken());
				dis=stoi(st.nextToken());
				move(dir,dis);
			}
			show();
			
			System.out.println("#"+t+" "+count);

		}

	}
	private static void move(int r, int s) {
		for(int i=1;i<=s;i++) {
			int nx=dirR[i]+x;
			int ny=dirC[i]+y;
		}
		
	}
	private static void show() {
		for(int i=0;i<N;i++) {
			for(int j=0;j<N;j++) {
				System.out.print(map[i][j]);
			}
			System.out.println();
		}
		
	}
	
	
	
	
}

/*
1
8 5 3 4
1 8 5 5 1 2 6 7
 */

