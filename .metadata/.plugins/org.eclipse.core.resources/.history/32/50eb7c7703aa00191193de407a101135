package array;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class salt2 {
	public static int stoi(String s) {
		return Integer.parseInt(s);
		}
	static int N;
	static int[][] dire= {
			{1,0},
			{0,1}
	};
	static int[][] map;
	static int salt;
	static int count;
	static int ans;
	static int x,y,dir;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int T=stoi(st.nextToken());
		for(int t=1;t<=T;t++) {
			count=0;
			int c=0;
			int flag=0;
			ans=0;
			st = new StringTokenizer(br.readLine());
			N=stoi(st.nextToken());
			map = new int [N][N];
			salt=stoi(st.nextToken());
			int[] a = new int[salt];
			for (int i = 0; i < salt; i++) {
				++count;
				st = new StringTokenizer(br.readLine());
				int a=stoi(st.nextToken());
				int b=stoi(st.nextToken());
				dir=stoi(st.nextToken());
				jump(x,y);
				if(ans!=0 && flag==0) {
					flag=ans;
				}
			}
			System.out.println("#"+t+" "+flag);

		}

	}
	private static void jump(int x, int y) {
		map[x][y]=1;
		for(int i=3;i>=1;i--) {
			int nx=x;
			int ny=y;
		}
		if(dir==2) {
			for(int i=3;i>0;i--) {
				y=y+i;
				if(y<0 || y>=N) {
					return;
				}
				if(map[x][y]!=0) {
					ans=count;
					return;
				}
				map[x][y]=1;
			}
		}
		if(dir==1) {
			for(int i=3;i>0;i--) {
				x=x+i;
				if(x<0 || x>=N) {
					return;
				}
				if(map[x][y]!=0) {
					ans=count;
					return;
				}
				map[x][y]=1;
			}
		}
		
	}
	
	
	
}


